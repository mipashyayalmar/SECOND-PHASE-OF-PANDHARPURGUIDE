# Generated by Django 5.1.5 on 2025-03-26 13:01

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Hotels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='krishna', max_length=30)),
                ('owner', models.CharField(max_length=20)),
                ('location', models.CharField(max_length=50)),
                ('state', models.CharField(default='maharashtra', max_length=50)),
                ('country', models.CharField(default='india', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Comments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment_text', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Replies',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reply_text', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='krishna.comments')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Rooms',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room_type', models.CharField(choices=[('1', 'premium'), ('2', 'deluxe'), ('3', 'basic')], max_length=50)),
                ('capacity', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('size', models.IntegerField(help_text='Room size in square feet')),
                ('status', models.CharField(choices=[('1', 'available'), ('2', 'not available')], max_length=15)),
                ('room_number', models.CharField(max_length=10, null=True)),
                ('discount', models.DecimalField(decimal_places=2, default=0.0, help_text='Discount percentage (0-100%)', max_digits=5, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)])),
                ('average_rating', models.DecimalField(decimal_places=2, default=0, help_text='Average rating (0-5)', max_digits=3, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(5.0)])),
                ('image1', models.ImageField(blank=True, null=True, upload_to='room_images/')),
                ('image2', models.ImageField(blank=True, null=True, upload_to='room_images/')),
                ('image3', models.ImageField(blank=True, null=True, upload_to='room_images/')),
                ('image4', models.ImageField(blank=True, null=True, upload_to='room_images/')),
                ('image5', models.ImageField(blank=True, null=True, upload_to='room_images/')),
                ('image6', models.ImageField(blank=True, null=True, upload_to='room_images/')),
                ('image7', models.ImageField(blank=True, null=True, upload_to='room_images/')),
                ('image8', models.ImageField(blank=True, null=True, upload_to='room_images/')),
                ('image9', models.ImageField(blank=True, null=True, upload_to='room_images/')),
                ('image10', models.ImageField(blank=True, null=True, upload_to='room_images/')),
                ('image11', models.ImageField(blank=True, null=True, upload_to='room_images/')),
                ('image12', models.ImageField(blank=True, null=True, upload_to='room_images/')),
                ('image13', models.ImageField(blank=True, null=True, upload_to='room_images/')),
                ('image14', models.ImageField(blank=True, null=True, upload_to='room_images/')),
                ('image15', models.ImageField(blank=True, null=True, upload_to='room_images/')),
                ('description', models.TextField(blank=True, help_text='Detailed description of the room', null=True)),
                ('heading', models.CharField(blank=True, help_text='Short heading for the room', max_length=100, null=True)),
                ('parking', models.BooleanField(default=False, help_text='Indicates if parking is available')),
                ('extra_person_charges', models.DecimalField(decimal_places=2, default=0.0, help_text='Charges for extra person', max_digits=6, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('comfortable_bed', models.BooleanField(default=False, help_text='Indicates if the room has a comfortable bed')),
                ('private_bathroom', models.BooleanField(default=False, help_text='Indicates if the room has a private bathroom')),
                ('wifi', models.BooleanField(default=False, help_text='Indicates if Wi-Fi is available')),
                ('ac', models.BooleanField(default=False, help_text='Indicates if air conditioning is available')),
                ('fan', models.BooleanField(default=False, help_text='Indicates if a fan is available')),
                ('heater', models.BooleanField(default=False, help_text='Indicates if a heater is available')),
                ('cleanliness', models.BooleanField(default=False, help_text='Indicates regular cleanliness')),
                ('safety_security', models.BooleanField(default=False, help_text='Indicates if safety and security features are present')),
                ('entertainment_options', models.BooleanField(default=False, help_text='Indicates if entertainment options are available')),
                ('laundry_facility', models.BooleanField(default=False, help_text='Indicates if laundry facilities are available')),
                ('outdoor_balcony', models.BooleanField(default=False, help_text='Indicates if an outdoor balcony is available')),
                ('parking_area', models.BooleanField(default=False, help_text='Indicates if a parking area is available')),
                ('food_facility', models.BooleanField(default=False, help_text='Indicates if a food facility is available')),
                ('convenient_location', models.BooleanField(default=False, help_text='Indicates if the location is convenient')),
                ('concierge_service', models.BooleanField(default=False, help_text='Indicates if concierge service is available')),
                ('check_in_time', models.TimeField(blank=True, help_text='Check-in time (HH:MM AM/PM)', null=True)),
                ('check_out_time', models.TimeField(blank=True, help_text='Check-out time (HH:MM AM/PM)', null=True)),
                ('languages_spoken', models.CharField(choices=[('english', 'English'), ('marathi', 'Marathi'), ('hindi', 'Hindi')], default='marathi', help_text='Languages spoken by staff', max_length=50)),
                ('comments', models.ManyToManyField(blank=True, related_name='rooms', to='krishna.comments')),
                ('hotel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rooms', to='krishna.hotels')),
            ],
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('check_in', models.DateField()),
                ('check_out', models.DateField()),
                ('booking_id', models.CharField(default='null', max_length=100)),
                ('guest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='krishna.rooms')),
            ],
        ),
        migrations.AddField(
            model_name='comments',
            name='room',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='room_comments', to='krishna.rooms'),
        ),
        migrations.AddConstraint(
            model_name='rooms',
            constraint=models.UniqueConstraint(fields=('hotel', 'room_type', 'room_number'), name='unique_hotel_room_type_number'),
        ),
    ]
